/***************
  hybrid app开发的误区，也是开发过程中应该尽量避免的：
为了HTML5而hybrid app：HTML5是HTML4.0.1和XHTML1.0的升级版，有更强大
的表现功能，并加入了local storage等技术，为web页面提供了更大的想象空间
和更多的可能性。但是，作为发展中的技术，HTML5收到浏览器兼容性和手机硬件
水平的影响，能提供的功能和native app扔有一定的差距。开发应用时，首先是要
满足用户需求，而不是追赶技术革新的大潮。所以开发应用时，应从应用本身功能和
团队开发资源综合考量，决定是否采用hybrid app开发模式。
   
   忽略关键因素：Web是基于PC的一种开发模式，而mobile app运行于移动端。
  
   通常，web开发者使用PC浏览器模拟app中的web view进行调试，而不是直接使用手机上的web view。
二者能支配的CPU资源，最大占有内存，运行网络环境，和鼠标/触控操作，浏览器对CSS/JS的解析和对事件的处理有着巨大的差别。
而这些差别常常是web页面能否正常运行于app中的关键因素。
富交互导致体验差：这主要体现在两个方面：

（1）web与手机平台默认交互习惯不一致：iOS和Android各有一套交互习惯，包括视觉风格，界面切换
，操作习惯等。比如手机端系统风格是左右滑屏来进入或者退出界面，而旧界面保持状态；
web则是默认无论加载还是后退，都会刷新旧界面，造成体验上的损失。如果模拟native的交互方式，
那么会提高开发成本，却也难以达到native的流畅性。

（2）与native相比同样的功能在性能上存在差距：Web界面上JS对HTML Node的操作需要消耗大量的CPU资源。
首先，手机的CPU性能普遍低于PC端；其次，不同手机之间的硬件水平也参差不齐，比如在iPhone6s上可以流畅运行的界面，
在iPhone5、MX5上可能就无法达到同样的流畅度。
跨平台：Hybrid app的优势之一是继承web跨平台的特性。然而，在智能手机软硬件版本众多的今天，
兼容性是个不容忽视的问题。不同的安卓操作系统其浏览器内核对JS和CSS的解析、事件处理会有不同；
iOS不同版本之间也存在较大差异。所以，在跨平台开发时，兼容性也是需要重点考虑的问题。
交互一致性：这里的一致性并非指同一应用在不同平台上的一致性体验，而是指在同一平台上，
hybrid app和native平台的一致性。比如“返回”操作，在iOS平台上页面顶部留有一个44像素高的导航栏，
左侧的返回按钮用于返回操作，可以通过绝对地址的方式链接到任何其它界面；而Android通常使用设备提供的返回键
，返回上一个界面，如果自行配置平台返回按钮，那么它会和设备提供的返回键指向不同的位置。
******************/
